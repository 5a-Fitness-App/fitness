-- 1. User Table
CREATE TABLE User (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    Username VARCHAR(50) UNIQUE NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Password VARCHAR(255) NOT NULL,
    ProfilePicture VARCHAR(255),
    Bio TEXT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 2. ActivityType Table
CREATE TABLE ActivityType (
    ActivityTypeID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(50) UNIQUE NOT NULL
);

-- 3. WorkoutPost Table
CREATE TABLE WorkoutPost (
    PostID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    Description TEXT,
    ActivityTypeID INT,
    Duration INT, -- in minutes
    CaloriesBurned INT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE,
    FOREIGN KEY (ActivityTypeID) REFERENCES ActivityType(ActivityTypeID) ON DELETE CASCADE
);

-- 4. Exercise Table
CREATE TABLE Exercise (
    ExerciseID INT PRIMARY KEY AUTO_INCREMENT,
    PostID INT,
    Name VARCHAR(100) NOT NULL,
    Reps INT,
    Sets INT,
    Weight DECIMAL(10,2),
    Duration INT, -- in seconds
    FOREIGN KEY (PostID) REFERENCES WorkoutPost(PostID) ON DELETE CASCADE
);

-- 5. Comment Table
CREATE TABLE Comment (
    CommentID INT PRIMARY KEY AUTO_INCREMENT,
    PostID INT,
    UserID INT,
    Text TEXT NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PostID) REFERENCES WorkoutPost(PostID) ON DELETE CASCADE,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

-- 6. Like Table
CREATE TABLE Like (
    LikeID INT PRIMARY KEY AUTO_INCREMENT,
    PostID INT,
    UserID INT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PostID) REFERENCES WorkoutPost(PostID) ON DELETE CASCADE,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

-- 7. Follow Table
CREATE TABLE Follow (
    FollowID INT PRIMARY KEY AUTO_INCREMENT,
    FollowerID INT,
    FollowingID INT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (FollowerID) REFERENCES User(UserID) ON DELETE CASCADE,
    FOREIGN KEY (FollowingID) REFERENCES User(UserID) ON DELETE CASCADE,
    UNIQUE (FollowerID, FollowingID)
);

-- 8. Achievement Table
CREATE TABLE Achievement (
    AchievementID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    Name VARCHAR(100) NOT NULL,
    Description TEXT,
    EarnedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

-- 9. Tag Table
CREATE TABLE Tag (
    TagID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(50) UNIQUE NOT NULL
);

-- 10. WorkoutPost_Tag Table (Many-to-Many Relationship)
CREATE TABLE WorkoutPost_Tag (
    PostID INT,
    TagID INT,
    PRIMARY KEY (PostID, TagID),
    FOREIGN KEY (PostID) REFERENCES WorkoutPost(PostID) ON DELETE CASCADE,
    FOREIGN KEY (TagID) REFERENCES Tag(TagID) ON DELETE CASCADE
);
